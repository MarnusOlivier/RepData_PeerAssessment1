rows = 10
cols = 5
dataMatrix <- matrix(c(10*abs(rnorm(rows*cols/2)),1*abs(rnorm(rows*cols/2))), nrow = rows, ncol = cols)
plot(hclust(dist(dataMatrix)))
heatmap(dataMatrix)
# image(1:cols, 1:rows, t(dataMatrix))
rows = 10
cols = 5
dataMatrix <- matrix(c(10*abs(rnorm(rows*cols/2)),1*abs(rnorm(rows*cols/2))), nrow = rows, ncol = cols)
plot(hclust(dist(dataMatrix)))
heatmap(dataMatrix)
# image(1:cols, 1:rows, t(dataMatrix))
rows = 10
cols = 5
dataMatrix <- matrix(c(10*abs(rnorm(rows*cols/2)),1*abs(rnorm(rows*cols/2))), nrow = rows, ncol = cols)
plot(hclust(dist(dataMatrix)))
heatmap(dataMatrix)
# image(1:cols, 1:rows, t(dataMatrix))
rows = 10
cols = 5
dataMatrix <- matrix(c(10*abs(rnorm(rows*cols/2)),1*abs(rnorm(rows*cols/2))), nrow = rows, ncol = cols)
plot(hclust(dist(dataMatrix)))
heatmap(dataMatrix)
# image(1:cols, 1:rows, t(dataMatrix))
rows = 10
cols = 5
dataMatrix <- matrix(c(10*abs(rnorm(rows*cols/2)),1*abs(rnorm(rows*cols/2))), nrow = rows, ncol = cols)
plot(hclust(dist(dataMatrix)))
heatmap(dataMatrix)
# image(1:cols, 1:rows, t(dataMatrix))
rows = 10
cols = 5
dataMatrix <- matrix(c(10*abs(rnorm(rows*cols/4)),
1*abs(rnorm(rows*cols/4)),
10*abs(rnorm(rows*cols/4)),
1*abs(rnorm(rows*cols/4))),
nrow = rows, ncol = cols)
plot(hclust(dist(dataMatrix)))
heatmap(dataMatrix)
# image(1:cols, 1:rows, t(dataMatrix))
rows = 10
cols = 5
dataMatrix <- matrix(c(10*abs(rnorm(rows*cols/4)),
1 *abs(rnorm(rows*cols/4)),
10*abs(rnorm(rows*cols/4)),
1 *abs(rnorm(rows*cols/4))),
nrow = rows, ncol = cols)
rows = 10
cols = 8
dataMatrix <- matrix(c(10*abs(rnorm(rows*cols/4)),
1 *abs(rnorm(rows*cols/4)),
10*abs(rnorm(rows*cols/4)),
1 *abs(rnorm(rows*cols/4))),
nrow = rows, ncol = cols)
plot(hclust(dist(dataMatrix)))
heatmap(dataMatrix)
# image(1:cols, 1:rows, t(dataMatrix))
rows = 10
cols = 8
dataMatrix <- matrix(c(10*abs(rnorm(rows*cols/4)),
1 *abs(rnorm(rows*cols/4)),
10*abs(rnorm(rows*cols/4)),
1 *abs(rnorm(rows*cols/4))),
nrow = rows, ncol = cols)
plot(hclust(dist(dataMatrix)))
heatmap(dataMatrix)
# image(1:cols, 1:rows, t(dataMatrix))
rows = 10
cols = 8
dataMatrix <- matrix(c(10*abs(rnorm(rows*cols/4)),
1 *abs(rnorm(rows*cols/4)),
10*abs(rnorm(rows*cols/4)),
1 *abs(rnorm(rows*cols/4))),
nrow = rows, ncol = cols)
plot(hclust(dist(dataMatrix)))
heatmap(dataMatrix)
# image(1:cols, 1:rows, t(dataMatrix))
rows = 10
cols = 8
dataMatrix <- matrix(c(10*abs(rnorm(rows*cols/4)),
1 *abs(rnorm(rows*cols/4)),
10*abs(rnorm(rows*cols/4)),
1 *abs(rnorm(rows*cols/4))),
nrow = rows, ncol = cols)
plot(hclust(dist(dataMatrix)))
heatmap(dataMatrix)
# image(1:cols, 1:rows, t(dataMatrix))
rows = 10
cols = 8
dataMatrix <- matrix(c(10*abs(rnorm(rows*cols/4)),
1 *abs(rnorm(rows*cols/4)),
10*abs(rnorm(rows*cols/4)),
1 *abs(rnorm(rows*cols/4))),
nrow = rows, ncol = cols)
plot(hclust(dist(dataMatrix)))
heatmap(dataMatrix)
# image(1:cols, 1:rows, t(dataMatrix))
rows = 10
cols = 8
dataMatrix <- matrix(c(10*abs(rnorm(rows*cols/4)),
1 *abs(rnorm(rows*cols/4)),
10*abs(rnorm(rows*cols/4)),
1 *abs(rnorm(rows*cols/4))),
nrow = rows, ncol = cols)
plot(hclust(dist(dataMatrix)))
heatmap(dataMatrix)
# image(1:cols, 1:rows, t(dataMatrix))
rows = 10
cols = 8
dataMatrix <- matrix(c(10*abs(rnorm(rows*cols/4)),
1 *abs(rnorm(rows*cols/4)),
10*abs(rnorm(rows*cols/4)),
1 *abs(rnorm(rows*cols/4))),
nrow = rows, ncol = cols)
plot(hclust(dist(dataMatrix)))
heatmap(dataMatrix)
# image(1:cols, 1:rows, t(dataMatrix))
rows = 10
cols = 8
dataMatrix <- matrix(c(10*abs(rnorm(rows*cols/4)),
1 *abs(rnorm(rows*cols/4)),
10*abs(rnorm(rows*cols/4)),
1 *abs(rnorm(rows*cols/4))),
nrow = rows, ncol = cols)
plot(hclust(dist(dataMatrix)))
heatmap(dataMatrix)
# image(1:cols, 1:rows, t(dataMatrix))
hh <- hclust(dist(dataMatrix))
hh
names(hh)
hh$order
rows = 10
cols = 8
dataMatrix <- matrix(c(10*abs(rnorm(rows*cols/4)),
1 *abs(rnorm(rows*cols/4)),
10*abs(rnorm(rows*cols/4)),
1 *abs(rnorm(rows*cols/4))),
nrow = rows, ncol = cols)
hh <- hclust(dist(dataMatrix))
hh
heatmap(dataMatrix)
# plot(hclust(dist(dataMatrix)))
# image(1:cols, 1:rows, t(dataMatrix))
rows = 10
cols = 8
dataMatrix <- matrix(c(10*abs(rnorm(rows*cols/4)),
1 *abs(rnorm(rows*cols/4)),
10*abs(rnorm(rows*cols/4)),
1 *abs(rnorm(rows*cols/4))),
nrow = rows, ncol = cols)
hh <- hclust(dist(dataMatrix))
hh$order
heatmap(dataMatrix)
# plot(hclust(dist(dataMatrix)))
# image(1:cols, 1:rows, t(dataMatrix))
rows = 10
cols = 8
dataMatrix <- matrix(c(10*abs(rnorm(rows*cols/4)),
1 *abs(rnorm(rows*cols/4)),
10*abs(rnorm(rows*cols/4)),
1 *abs(rnorm(rows*cols/4))),
nrow = rows, ncol = cols)
hh <- hclust(dist(dataMatrix))
par(mfrow = c(1,3))
heatmap(dataMatrix)
plot(rowMeans(dataMatrix), 40:1,, xlab = "Row Mean", ylab = "Row", pch = 19)
plot(colMeans(dataMatrix), xlab = "Column", ylab = "Column Mean", pch = 19)
# plot(hclust(dist(dataMatrix)))
# image(1:cols, 1:rows, t(dataMatrix))
rows = 10
cols = 8
dataMatrix <- matrix(c(10*abs(rnorm(rows*cols/4)),
1 *abs(rnorm(rows*cols/4)),
10*abs(rnorm(rows*cols/4)),
1 *abs(rnorm(rows*cols/4))),
nrow = rows, ncol = cols)
hh <- hclust(dist(dataMatrix))
par(mfrow = c(1,3))
heatmap(dataMatrix)
plot(rowMeans(dataMatrix), rows:1,, xlab = "Row Mean", ylab = "Row", pch = 19)
plot(colMeans(dataMatrix), xlab = "Column", ylab = "Column Mean", pch = 19)
# plot(hclust(dist(dataMatrix)))
# image(1:cols, 1:rows, t(dataMatrix))
rows = 10
cols = 8
dataMatrix <- matrix(c(10*abs(rnorm(rows*cols/4)),
1 *abs(rnorm(rows*cols/4)),
10*abs(rnorm(rows*cols/4)),
1 *abs(rnorm(rows*cols/4))),
nrow = rows, ncol = cols)
hh <- hclust(dist(dataMatrix))
par(mfrow = c(1,3))
heatmap(dataMatrix)
image(1:cols, 1:rows, t(dataMatrix))
plot(rowMeans(dataMatrix), rows:1,, xlab = "Row Mean", ylab = "Row", pch = 19)
plot(colMeans(dataMatrix), xlab = "Column", ylab = "Column Mean", pch = 19)
# plot(hclust(dist(dataMatrix)))
# image(1:cols, 1:rows, t(dataMatrix))
dataMatrix
scale(dataMatrix)
b <- scale(dataMatrix)
b
svd(scale(dataMatrix))
svd(scale(dataMatrix))$v
svd(scale(dataMatrix))$d
# SVD and PCA
svd1 <- svd(scale(dataMatrix))
par(mfrow = c(1, 2))
plot(svd1$u[, 1], 40:1, , xlab = "Row", ylab = "First left singular vector",
pch = 19)
plot(svd1$v[, 1], xlab = "Column", ylab = "First right singular vector", pch = 19)
rows = 10
cols = 8
dataMatrix <- matrix(c(10*abs(rnorm(rows*cols/4)),
1 *abs(rnorm(rows*cols/4)),
10*abs(rnorm(rows*cols/4)),
1 *abs(rnorm(rows*cols/4))),
nrow = rows, ncol = cols)
hh <- hclust(dist(dataMatrix))
par(mfrow = c(1,3))
heatmap(dataMatrix)
image(1:cols, 1:rows, t(dataMatrix))
plot(rowMeans(dataMatrix), rows:1,, xlab = "Row Mean", ylab = "Row", pch = 19)
plot(colMeans(dataMatrix), xlab = "Column", ylab = "Column Mean", pch = 19)
# SVD and PCA
svd1 <- svd(scale(dataMatrix))
par(mfrow = c(1, 2))
plot(svd1$u[, 1], 8:1, , xlab = "Row", ylab = "First left singular vector",
pch = 19)
plot(svd1$v[, 1], xlab = "Column", ylab = "First right singular vector", pch = 19)
rows = 10
cols = 8
dataMatrix <- matrix(c(10*abs(rnorm(rows*cols/4)),
1 *abs(rnorm(rows*cols/4)),
10*abs(rnorm(rows*cols/4)),
1 *abs(rnorm(rows*cols/4))),
nrow = rows, ncol = cols)
hh <- hclust(dist(dataMatrix))
par(mfrow = c(1,3))
heatmap(dataMatrix)
image(1:cols, 1:rows, t(dataMatrix))
plot(rowMeans(dataMatrix), rows:1,, xlab = "Row Mean", ylab = "Row", pch = 19)
plot(colMeans(dataMatrix), xlab = "Column", ylab = "Column Mean", pch = 19)
# SVD and PCA
svd1 <- svd(scale(dataMatrix))
par(mfrow = c(1, 2))
plot(svd1$u[, 1], rows:1, , xlab = "Row", ylab = "First left singular vector",
pch = 19)
plot(svd1$v[, 1], xlab = "Column", ylab = "First right singular vector", pch = 19)
dataMatrix <- matrix(c(10*abs(rnorm(rows*cols/4)),
1 *abs(rnorm(rows*cols/4)),
10*abs(rnorm(rows*cols/4)),
1 *abs(rnorm(rows*cols/4))),
nrow = rows, ncol = cols)
svd <- svd(dataMatrix)
svd$d
svd$v
dataMatrix%*%t(dataMatrix)
dataMatrix
svd$v
dataMatrix%*%svd$v[,2]
dataMatrix%*%svd$v[,c(1,2)]
dataMatrix%*%svd$v[,c(1,2)]%*%t(svd$v[,c(1,2)])
dataMatrix - dataMatrix%*%svd$v[,c(1,2)]%*%t(svd$v[,c(1,2)])
dataMatrix - dataMatrix%*%svd$v[,]%*%t(svd$v[,c(1,2)])
dataMatrix - dataMatrix%*%svd$v[,]%*%t(svd$v[,])
sum(dataMatrix - dataMatrix%*%svd$v[,]%*%t(svd$v[,]))
sum(dataMatrix - dataMatrix%*%svd$v[,2]%*%t(svd$v[,2]))
sum(dataMatrix - dataMatrix%*%svd$v[,3]%*%t(svd$v[,3]))
sum(dataMatrix - dataMatrix%*%svd$v[,6]%*%t(svd$v[,6]))
colors()
x <- rnorm(100000)
u <- rnorm(100000)
smoothScatter(x,y)
x <- rnorm(100000)
y <- rnorm(100000)
smoothScatter(x,y)
install.packages(xtable)
install.packages('xtable')
?xtable
library(xtable)
?xtable
my.table <- data.frame(Specifiers=c("","Spec1", "Spec2", "Spec3"),
Values1 = c("N=10", 1.03, 1.71, 2.25),
Values2 = c("N=20", 1.32, 1.79, 2.43))
colnames(my.table)[1] <- ""
# Pre-processing: rotates column names by 45 degrees
head = apply(as.array(names(my.table)), 1, function(x) paste("\\rotatebox{45}{", x, "}"))
head = paste(head, c(rep("&", length(head)-1), "\\\\\n"), collapse="")
latex.tab <- xtable(my.table, caption=c("Stats"))
ltable = print(latex.tab, file="", # File is empty, post-processing needed
floating.environment='sidewaystable',
include.rownames=FALSE,
include.colnames=FALSE, # No colnames
booktabs=TRUE,
latex.environment="center", # Or NULL
# Adds some extra-text after the rows specified in pos.
# Adds new \midrule and comments old one.
# Adds pre-processed names of columns
add.to.row=list(pos=as.list(c(0, 0, 1)), command=as.vector(c(head, "%", "\\midrule\n"))))
# Post-processing: replaces \begin{center} with \centering
ltable = sub("\\begin{center}\n", "\\centering\n", ltable, fixed=TRUE)
ltable = sub("\\end{center}\n", "\n", ltable, fixed=TRUE)
# Post-processing: adds alternating colours
ltable = sub("\\begin{tabular}",
"\\rowcolors{2}{gray!25}{white}\n\\begin{tabular}",
ltable, fixed=TRUE)
# Writes output to the file
cat(ltable, file="Summarystats.tex")
library(dplyr)
library(ggplot2)
library(knitr)
TotalNASteps    <- length(which(is.na(Data$steps)))
TotalNADate     <- length(which(is.na(Data$date)))
TotalNAInterval <- length(which(is.na(Data$interval)))
```{r}
Imp_TotalStepsPerDay <- Imp_Data %>%
group_by(date) %>%
summarise(TotalSteps = sum(steps))
p1 <-   ggplot(TotalStepsPerDay) + theme_bw() +
geom_histogram(aes(Imp_TotalStepsPerDay$TotalSteps),binwidth=1000) +
xlab('Total Steps taken per day') +
ylab('Frequency') +
ggtitle('Raw Data')
p2 <-   ggplot(Imp_TotalStepsPerDay) + theme_bw() +
geom_histogram(aes(Imp_TotalStepsPerDay$TotalSteps),binwidth=1000) +
xlab('Total Steps taken per day') +
ylab('Frequency') +
ggtitle('Imputed Data')
Imp_MeanSteps    <- format(mean(Imp_TotalStepsPerDay$TotalSteps),trim=TRUE)
Imp_MedianSteps  <- format(median(Imp_TotalStepsPerDay$TotalSteps),trim=TRUE)
stat_Tabele      <- data.frame(Mean   = c(MeanSteps,  Imp_MeanSteps),
Median = c(MedianSteps,Imp_MedianSteps))
rownames(stat_Tabele) <- c('RawData', 'Imputed Data')
grid.arrange(p1,p2, ncol = 2)
kable(stat_Tabele, format = "pandoc", digits=3, caption = ' ', align = 'c')
```
```{r,message=FALSE,warning=FALSE}
library(dplyr)
library(ggplot2)
library(knitr)
library(gridExtra)
```
```{r}
opts_chunk$set(echo=TRUE,fig.height = 4,fig.width = 7,fig.align = 'center')
```
```{r}
setwd("C:/Users/212410226/Python & R/R_workingDirectory/4. Reproducible research/Week 2/Project/RepData_PeerAssessment1")
```
```{r}
Data <- read.csv(unz("activity.zip","activity.csv"), stringsAsFactors = FALSE)
```
```{r}
head(Data[!is.na(Data$steps) & Data$steps!= 0,])
```
```{r}
TotalStepsPerDay <- Data %>%
filter(!is.na(steps)) %>%
group_by(date) %>%
summarise(TotalSteps = sum(steps))
```
TotalStepsPerDay
```{r}
ggplot(TotalStepsPerDay) + theme_bw() +
geom_histogram(aes(TotalStepsPerDay$TotalSteps),binwidth=1000) +
xlab('Total Steps taken per day') +
ylab('Frequency')
```
####3. Calculate and report the mean and median of the total number of steps taken per day
```{r}
MeanSteps    <- format(mean(TotalStepsPerDay$TotalSteps),trim=TRUE)
MedianSteps  <- format(median(TotalStepsPerDay$TotalSteps),trim=TRUE)
```
T
```{r}
DailyActivityPatern <- Data %>%
filter(!is.na(steps)) %>%
group_by(interval) %>%
summarise(AvgSteps = mean(steps))
```
```{r}
ggplot(DailyActivityPatern) + theme_bw() +
geom_line(aes(interval,AvgSteps)) +
xlab('Daily 5-minute interval') +
ylab('Average number of steps taken')
```
```{r}
max_value    <- max(DailyActivityPatern$AvgSteps)
max_interval <- DailyActivityPatern$interval[DailyActivityPatern$AvgSteps == max_value]
```
```{r}
TotalNASteps    <- length(which(is.na(Data$steps)))
TotalNADate     <- length(which(is.na(Data$date)))
TotalNAInterval <- length(which(is.na(Data$interval)))
```
NA_locations <- which(is.na(Data$steps))
Imp_Data <- data.frame(Data)
for(i in NA_locations){
Imp_Data[i,1] <- DailyActivityPatern$AvgSteps[Imp_Data[i,3] == DailyActivityPatern$interval]
}
Imp_TotalStepsPerDay <- Imp_Data %>%
group_by(date) %>%
summarise(TotalSteps = sum(steps))
Imp_TotalStepsPerDay
p1 <-   ggplot(TotalStepsPerDay) + theme_bw() +
geom_histogram(aes(Imp_TotalStepsPerDay$TotalSteps),binwidth=1000) +
xlab('Total Steps taken per day') +
ylab('Frequency') +
ggtitle('Raw Data')
p2 <-   ggplot(Imp_TotalStepsPerDay) + theme_bw() +
geom_histogram(aes(Imp_TotalStepsPerDay$TotalSteps),binwidth=1000) +
xlab('Total Steps taken per day') +
ylab('Frequency') +
ggtitle('Imputed Data')
Imp_MeanSteps    <- format(mean(Imp_TotalStepsPerDay$TotalSteps),trim=TRUE)
Imp_MedianSteps  <- format(median(Imp_TotalStepsPerDay$TotalSteps),trim=TRUE)
stat_Tabele      <- data.frame(Mean   = c(MeanSteps,  Imp_MeanSteps),
Median = c(MedianSteps,Imp_MedianSteps))
rownames(stat_Tabele) <- c('RawData', 'Imputed Data')
grid.arrange(p1,p2, ncol = 2)
kable(stat_Tabele, format = "pandoc", digits=3, caption = ' ', align = 'c')
grid.arrange(p1,p2, ncol = 2)
?grid.arrange
grid.arrange(p1,p2, nrow = 2)
grid.arrange(p1,p2, nrow = 2, main = "Comparison between changes in Emissions from\nmotor vehicles in Baltimore and LA")
do.call(grid.arrange(p1,p2, nrow = 2))
grid.arrange(p1,p2, nrow = 2)
p1
ggplot(TotalStepsPerDay) + theme_bw() +
geom_histogram(aes(Imp_TotalStepsPerDay$TotalSteps),binwidth=1000) +
xlab('Total Steps taken per day') +
ylab('Frequency') +
ggtitle('Raw Data')
TotalStepsPerDay
Imp_TotalStepsPerDay
ggplot(TotalStepsPerDay) + theme_bw() +
geom_histogram(aes(TotalStepsPerDay$TotalSteps),binwidth=1000) +
xlab('Total Steps taken per day') +
ylab('Frequency')
ggplot(TotalStepsPerDay) + theme_bw() +
geom_histogram(aes(TotalSteps),binwidth=1000) +
xlab('Total Steps taken per day') +
ylab('Frequency')
ggplot(TotalStepsPerDay) + theme_bw() +
geom_histogram(aes(TotalSteps),binwidth=1000) +
xlab('Total Steps taken per day') +
ylab('Frequency')
ggplot(TotalStepsPerDay) + theme_bw() +
geom_histogram(aes(TotalSteps),binwidth=1000) +
xlab('Total Steps taken per day') +
ylab('Frequency')
ggplot(TotalStepsPerDay) + theme_bw() +
geom_histogram(aes(TotalSteps),binwidth=1000) +
xlab('Total Steps taken per day') +
ylab('Frequency')
ggplot(Imp_TotalStepsPerDay) + theme_bw() +
geom_histogram(aes(TotalSteps),binwidth=1000) +
xlab('Total Steps taken per day') +
ylab('Frequency') +
ggtitle('Imputed Data')
ggplot(TotalStepsPerDay) + theme_bw() +
geom_histogram(aes(TotalSteps),binwidth=1000) +
xlab('Total Steps taken per day') +
ylab('Frequency') +
ggtitle('Raw Data')
grid.arrange(p1,p2, nrow = 2)
p1 <-   ggplot(TotalStepsPerDay) + theme_bw() +
geom_histogram(aes(TotalSteps),binwidth=1000) +
xlab('Total Steps taken per day') +
ylab('Frequency') +
ggtitle('Raw Data')
p2 <-   ggplot(Imp_TotalStepsPerDay) + theme_bw() +
geom_histogram(aes(TotalSteps),binwidth=1000) +
xlab('Total Steps taken per day') +
ylab('Frequency') +
ggtitle('Imputed Data')
grid.arrange(p1,p2, nrow = 2)
grid.arrange(p1,p2, ncol = 2)
ggplot(Imp_DailyActivityPatern) + theme_bw() +
geom_line(aes(interval,AvgSteps,col = Fact)) +
facet_grid(Fact~.) +
xlab('Daily 5-minute interval') +
ylab('Average number of steps taken')
Imp_Data$Fact <- weekdays(as.POSIXlt(Imp_Data$date, tz = 'UTC'))
Imp_Data$Fact <- factor(ifelse(Imp_Data$Fact=="Sunday"|Imp_Data$Fact=="Saturday","weekend","weekday"))
Imp_DailyActivityPatern <- Imp_Data %>%
group_by(Fact,interval) %>%
summarise(AvgSteps = mean(steps))
ggplot(Imp_DailyActivityPatern) + theme_bw() +
geom_line(aes(interval,AvgSteps,col = Fact)) +
facet_grid(Fact~.) +
xlab('Daily 5-minute interval') +
ylab('Average number of steps taken')
ggplot(Imp_DailyActivityPatern) + theme_bw() +
geom_line(aes(interval,AvgSteps,col = Fact)) +
xlab('Daily 5-minute interval') +
ylab('Average number of steps taken')
ggplot(Imp_DailyActivityPatern) + theme_bw() +
geom_line(aes(interval,AvgSteps)) +
facet_grid(Fact~.) +
xlab('Daily 5-minute interval') +
ylab('Average number of steps taken')
p1 <-   ggplot(Imp_DailyActivityPatern) + theme_bw() +
geom_line(aes(interval,AvgSteps)) +
facet_grid(Fact~.) +
xlab('Daily 5-minute interval') +
ylab('Average number of steps taken')
p2 <-   ggplot(Imp_DailyActivityPatern) + theme_bw() +
geom_line(aes(interval,AvgSteps,col = Fact)) +
xlab('Daily 5-minute interval') +
ylab('Average number of steps taken')
grid.arrange(p1,p2, ncol = 2)
